<?php
/**
 * @file
 * Code for the GSB Feature Book Content Type feature.
 */

include_once 'gsb_feature_book_ct.features.inc';

/**
 * Implements hook_form_FORM_ID_alter() for book node edit form.
 */
function gsb_feature_book_ct_form_book_node_form_alter(&$form, &$form_state) {
  
  $language = $form['language']['#value'];
  
  $form['title']['#description'] =
  'Include the edition in parentheses after the title. | <strong>Example:</strong> The Business of Sports: Text and Cases on Strategy and Management (4th edition)';

  // Add required field markers. The actual field validation is done in validate callback.
  if (!empty($form['field_first_name'][$language])) {
    $form['field_first_name'][$language][0]['value']['#title'] .= " " . theme('form_required_marker');
  }

  if (!empty($form['field_last_name'][$language])) {
    $form['field_last_name'][$language][0]['value']['#title'] .= " " . theme('form_required_marker');
  }

  if (!empty($form['field_program_single'][$language])) {
    $form['field_program_single'][$language]['#title'] .= " " . theme('form_required_marker');
  }

  if (!empty($form['field_year'][$language])) {
    $form['field_year'][$language][0]['#title'] .= " " . theme('form_required_marker');
  }

  // Hide alumni fields if the alumni checkbox is not checked.
  $form['field_year']['#states']['invisible'][':input[name="field_alumni_story[' . $language . ']"]'] = array(
    array('checked' => FALSE),
  );

  $form['field_program_single']['#states']['invisible'][':input[name="field_alumni_story[' . $language . ']"]'] = array(
    array('checked' => FALSE),
  );

  // Perform additional validation.
  $form['#validate'][] = 'gsb_feature_book_ct_book_node_form_validate';
}

/**
 *  Implements hook_field_group_pre_render_alter().
 */
function gsb_feature_book_ct_field_group_pre_render_alter(&$element, $group, &$form) {
  // Hide field group for alumni name if alumni checkbox is not checked.
  if ($element['#id'] == 'node_book_form_group_alumni_name') {
    $language = $form['language']['#value'];
    $element['#states']['invisible'][':input[name="field_alumni_story[' . $language . ']"]'] = array(
      array('checked' => FALSE),
    );
  }
}

/**
 * Validate callback for book_node_form.
 *  - Conditionally validate alumni story fields.
 */
function gsb_feature_book_ct_book_node_form_validate($form, &$form_state) {
  $language = $form['language']['#value'];
  $values = $form_state['values'];

  // If Book is an alumni story we need to manually validate some required fields.
  if ($values['field_alumni_story'][$language][0]['value'] == TRUE) {

    // Validate first and last name.
    if (empty($values['field_first_name'][$language][0]['value'])) {
      $field_label = $form['field_first_name'][$language][0]['#title'];
      form_set_error('field_first_name][und][0][value', $field_label . ' field is required.');
    }
    if (empty($values['field_last_name'][$language][0]['value'])) {
      $field_label = $form['field_last_name'][$language][0]['#title'];
      form_set_error('field_last_name][und][0][value', $field_label . ' field is required.');
    }

    if (empty($values['field_program_single'][$language][0]['tid'])) {
      $field_label = $form['field_program_single'][$language]['#title'];
      form_set_error('field_program_single][und][0][tid', $field_label . ' field is required.');
    }

    if (empty($values['field_year'][$language][0]['value'])) {
      $field_label = $form['field_year'][$language]['#title'];
      form_set_error('field_year][und][0][value', $field_label . ' field is required.');
    }
  }
}

/**
 * Implements hook_field_collection_is_empty_alter().
 */
function gsb_feature_book_ct_field_collection_is_empty_alter(&$is_empty, $entity) {
  if (!$is_empty && $entity->field_name == 'field_book_url_pdf_unlimited') {
    // Mark the field as empty.
    $is_empty = TRUE;
    $wrapper = entity_metadata_wrapper('field_collection_item', $entity);
    // Iterate through the fields we care about.
    foreach (array('field_file_single_public', 'field_link_single', 'field_title') as $field_name) {
      // If any of these fields have a value, the field collection is not empty.
      if ($value = $wrapper->$field_name->value()) {
        $is_empty = FALSE;
        continue;
      }
    }
  }
}
